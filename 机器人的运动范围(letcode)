class Solution {
public:
    int vi[101][101] = {0};
    
    bool inq(int i, int j, int k){
        int sum = 0;
        while(i || j){
            sum += i % 10;
            sum += j % 10;
            i /= 10;
            j /= 10;
        }
        if(sum > k)
            return false;
        return true;
    }
    
    int dfs(int i, int j, int m, int n, int k){
        if(i < 0 || i >= m || j < 0 || j >= n)
            return 0;
        if(!inq(i, j, k) || vi[i][j] == 1)
            return 0;
        vi[i][j] = 1;
        return dfs(i-1, j, m, n, k) + dfs(i+1, j, m, n, k)
            + dfs(i, j-1, m, n, k) + dfs(i, j+1, m, n, k)
            + 1;
    }
    
    int movingCount(int m, int n, int k) {
        return dfs(0, 0, m, n, k);
    }
};
